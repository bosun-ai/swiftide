[workspace]
members = ["swiftide", "swiftide-*", "examples", "benchmarks"]
default-members = ["swiftide", "swiftide-*"]
resolver = "2"

[workspace.package]
version = "0.25.0"
edition = "2021"
license = "MIT"
readme = "README.md"
keywords = ["llm", "rag", "ai", "data", "openai"]
description = "Fast, streaming indexing, query, and agentic LLM applications in Rust"
categories = ["asynchronous"]
repository = "https://github.com/bosun-ai/swiftide"
homepage = "https://swiftide.rs"

[profile.dev.package]
insta.opt-level = 3
similar.opt-level = 3

[workspace.dependencies]
anyhow = { version = "1.0", default-features = false }
thiserror = { version = "2.0", default-features = false }
async-trait = { version = "0.1", default-features = false }
derive_builder = { version = "0.20", default-features = true }
fs-err = { version = "3.1", default-features = false }
futures-util = { version = "0.3", default-features = true }
tokio = { version = "1.44", features = [
  "rt-multi-thread",
  "time",
], default-features = false }
tokio-stream = { version = "0.1", default-features = false, features = [
  "time",
] }
tracing = { version = "0.1", features = [
  "log",
  "attributes",
], default-features = false }
num_cpus = { version = "1.16", default-features = false }
pin-project = { version = "1.1", default-features = false }
itertools = { version = "0.14", default-features = true }
serde = { version = "1.0", features = ["derive"], default-features = false }
serde_json = { version = "1.0", default-features = false }
strum = { version = "0.27", default-features = false }
strum_macros = { version = "0.27", default-features = false }
lazy_static = { version = "1.5", default-features = false }
chrono = { version = "0.4", default-features = false }
indoc = { version = "2.0", default-features = false }
regex = { version = "1.11", default-features = false }
uuid = { version = "1.16", features = [
  "v3",
  "v4",
  "serde",
], default-features = false }
dyn-clone = { version = "1.0", default-features = false }
convert_case = { version = "0.8", default-features = false }

# Mcp
rmcp = { version = "0.1", default-features = false }
schemars = { version = "0.8", default-features = false }

# Integrations
spider = { version = "2.36", default-features = false }
async-openai = { version = "0.28", default-features = false }
qdrant-client = { version = "1.13", default-features = false, features = [
  "serde",
] }
fluvio = { version = "0.26.2", default-features = false }
lancedb = { version = "0.18", default-features = false, features = [
  "remote",
] }
# Needs to stay in sync with whatever lancdb uses, nice
arrow-array = { version = "54.2", default-features = false }
parquet = { version = "54.2", default-features = false, features = ["async"] }
redb = { version = "2.4", default-features = false }
sqlx = { version = "0.8", features = [
  "postgres",
  "uuid",
], default-features = false }
aws-config = { version = "1.6", default-features = false }
pgvector = { version = "0.4", features = ["sqlx"], default-features = false }
aws-credential-types = { version = "1.2", default-features = false }
aws-sdk-bedrockruntime = { version = "1.82", default-features = false }
criterion = { version = "0.5", default-features = false }
darling = { version = "0.20", default-features = false }
deadpool = { version = "0.12", default-features = false }
document-features = { version = "0.2" }
fastembed = { version = "4.7", default-features = false }
flv-util = { version = "0.5", default-features = false }
htmd = { version = "0.1", default-features = false }
ignore = { version = "0.4", default-features = false }
proc-macro2 = { version = "1.0", default-features = false }
quote = { version = "1.0", default-features = false }
redis = { version = "0.29", default-features = false }
reqwest = { version = "0.12", default-features = false }
secrecy = { version = "0.10", default-features = false }
syn = { version = "2.0", default-features = false }
tera = { version = "1.20", default-features = false }
text-splitter = { version = "0.24", default-features = false }
tracing-subscriber = { version = "0.3", default-features = true }
tree-sitter = { version = "0.25", default-features = false, features = ["std"] }
tree-sitter-java = { version = "0.23", default-features = false }
tree-sitter-javascript = { version = "0.23", default-features = false }
tree-sitter-python = { version = "0.23", default-features = false }
tree-sitter-ruby = { version = "0.23", default-features = false }
tree-sitter-rust = { version = "0.23", default-features = false }
tree-sitter-typescript = { version = "0.23", default-features = false }
tree-sitter-go = { version = "0.23", default-features = false }
tree-sitter-solidity = { version = "1.2", default-features = false }
tree-sitter-c = { version = "0.23", default-features = false }
tree-sitter-cpp = { version = "0.23", default-features = false }
async-anthropic = { version = "0.3.0", default-features = false }
duckdb = { version = "1", default-features = false }
libduckdb-sys = { version = "1", default-features = false }
tiktoken-rs = { version = "0.6", default-features = false }

# Testing
test-log = { version = "0.2" }
testcontainers = { version = "0.23", features = ["http_wait"] }
mockall = { version = "0.13" }
temp-dir = { version = "0.1" }
wiremock = { version = "0.6" }
test-case = { version = "3.3" }
pretty_assertions = { version = "1.4" }
insta = { version = "1.42", features = ["yaml"] }

[workspace.lints.rust]
unsafe_code = "forbid"
unexpected_cfgs = { level = "warn", check-cfg = [
  'cfg(coverage,coverage_nightly)',
] }

[workspace.lints.clippy]
cargo = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
blocks_in_conditions = "allow"
must_use_candidate = "allow"
module_name_repetitions = "allow"
missing_fields_in_debug = "allow"
# Should be fixed asap
multiple_crate_versions = "allow"
