name: CI

on:
  pull_request:
  merge_group:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-lint

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: r7kamura/rust-problem-matchers@v1
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Check typos
        uses: crate-ci/typos@master
      # - name: Lint dependencies
      #   uses: EmbarkStudios/cargo-deny-action@v2
      - name: clippy
        run: cargo clippy --all-targets --all-features --workspace
        env:
          RUSTFLAGS: "-Dwarnings"

  lint-formatting:
    name: Lint formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - uses: r7kamura/rust-problem-matchers@v1
      - name: "Rustfmt"
        run: cargo +nightly fmt --all -- --check
        env:
          RUSTFLAGS: "-Dwarnings"

  hack:
    name: Cargo Hack
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - uses: r7kamura/rust-problem-matchers@v1
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install cargo-hack
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-hack
      - name: Check features with Cargo Hack
        run: cargo hack check --each-feature --no-dev-deps
