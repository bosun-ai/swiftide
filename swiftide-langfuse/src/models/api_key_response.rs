/*
 * langfuse
 *
 * ## Authentication  Authenticate with the API using [Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication), get API keys in the project settings:  - username: Langfuse Public Key - password: Langfuse Secret Key  ## Exports  - OpenAPI spec: https://cloud.langfuse.com/generated/api/openapi.yml - Postman collection: https://cloud.langfuse.com/generated/postman/collection.json
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ApiKeyResponse : Response for API key creation
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiKeyResponse {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "createdAt")]
    pub created_at: String,
    #[serde(rename = "publicKey")]
    pub public_key: String,
    #[serde(rename = "secretKey")]
    pub secret_key: String,
    #[serde(rename = "displaySecretKey")]
    pub display_secret_key: String,
    #[serde(rename = "note", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub note: Option<Option<String>>,
}

impl ApiKeyResponse {
    /// Response for API key creation
    pub fn new(id: String, created_at: String, public_key: String, secret_key: String, display_secret_key: String) -> ApiKeyResponse {
        ApiKeyResponse {
            id,
            created_at,
            public_key,
            secret_key,
            display_secret_key,
            note: None,
        }
    }
}

