/*
 * langfuse
 *
 * ## Authentication  Authenticate with the API using [Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication), get API keys in the project settings:  - username: Langfuse Public Key - password: Langfuse Secret Key  ## Exports  - OpenAPI spec: https://cloud.langfuse.com/generated/api/openapi.yml - Postman collection: https://cloud.langfuse.com/generated/postman/collection.json
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UtilsMetaResponse {
    /// current page number
    #[serde(rename = "page")]
    pub page: i32,
    /// number of items per page
    #[serde(rename = "limit")]
    pub limit: i32,
    /// number of total items given the current filters/selection (if any)
    #[serde(rename = "totalItems")]
    pub total_items: i32,
    /// number of total pages given the current limit
    #[serde(rename = "totalPages")]
    pub total_pages: i32,
}

impl UtilsMetaResponse {
    pub fn new(page: i32, limit: i32, total_items: i32, total_pages: i32) -> UtilsMetaResponse {
        UtilsMetaResponse {
            page,
            limit,
            total_items,
            total_pages,
        }
    }
}

