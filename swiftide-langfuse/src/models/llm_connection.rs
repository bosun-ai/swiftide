/*
 * langfuse
 *
 * ## Authentication  Authenticate with the API using [Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication), get API keys in the project settings:  - username: Langfuse Public Key - password: Langfuse Secret Key  ## Exports  - OpenAPI spec: https://cloud.langfuse.com/generated/api/openapi.yml - Postman collection: https://cloud.langfuse.com/generated/postman/collection.json
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// LlmConnection : LLM API connection configuration (secrets excluded)
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LlmConnection {
    #[serde(rename = "id")]
    pub id: String,
    /// Provider name (e.g., 'openai', 'my-gateway'). Must be unique in project, used for upserting.
    #[serde(rename = "provider")]
    pub provider: String,
    /// The adapter used to interface with the LLM
    #[serde(rename = "adapter")]
    pub adapter: String,
    /// Masked version of the secret key for display purposes
    #[serde(rename = "displaySecretKey")]
    pub display_secret_key: String,
    /// Custom base URL for the LLM API
    #[serde(rename = "baseURL", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub base_url: Option<Option<String>>,
    /// List of custom model names available for this connection
    #[serde(rename = "customModels")]
    pub custom_models: Vec<String>,
    /// Whether to include default models for this adapter
    #[serde(rename = "withDefaultModels")]
    pub with_default_models: bool,
    /// Keys of extra headers sent with requests (values excluded for security)
    #[serde(rename = "extraHeaderKeys")]
    pub extra_header_keys: Vec<String>,
    #[serde(rename = "createdAt")]
    pub created_at: String,
    #[serde(rename = "updatedAt")]
    pub updated_at: String,
}

impl LlmConnection {
    /// LLM API connection configuration (secrets excluded)
    pub fn new(id: String, provider: String, adapter: String, display_secret_key: String, custom_models: Vec<String>, with_default_models: bool, extra_header_keys: Vec<String>, created_at: String, updated_at: String) -> LlmConnection {
        LlmConnection {
            id,
            provider,
            adapter,
            display_secret_key,
            base_url: None,
            custom_models,
            with_default_models,
            extra_header_keys,
            created_at,
            updated_at,
        }
    }
}

