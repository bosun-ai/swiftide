/*
 * langfuse
 *
 * ## Authentication  Authenticate with the API using [Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication), get API keys in the project settings:  - username: Langfuse Public Key - password: Langfuse Secret Key  ## Exports  - OpenAPI spec: https://cloud.langfuse.com/generated/api/openapi.yml - Postman collection: https://cloud.langfuse.com/generated/postman/collection.json
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ScimUsersListResponse {
    #[serde(rename = "schemas")]
    pub schemas: Vec<String>,
    #[serde(rename = "totalResults")]
    pub total_results: i32,
    #[serde(rename = "startIndex")]
    pub start_index: i32,
    #[serde(rename = "itemsPerPage")]
    pub items_per_page: i32,
    #[serde(rename = "Resources")]
    pub resources: Vec<models::ScimUser>,
}

impl ScimUsersListResponse {
    pub fn new(schemas: Vec<String>, total_results: i32, start_index: i32, items_per_page: i32, resources: Vec<models::ScimUser>) -> ScimUsersListResponse {
        ScimUsersListResponse {
            schemas,
            total_results,
            start_index,
            items_per_page,
            resources,
        }
    }
}

