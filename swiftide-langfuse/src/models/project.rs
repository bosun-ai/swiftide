/*
 * langfuse
 *
 * ## Authentication  Authenticate with the API using [Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication), get API keys in the project settings:  - username: Langfuse Public Key - password: Langfuse Secret Key  ## Exports  - OpenAPI spec: https://cloud.langfuse.com/generated/api/openapi.yml - Postman collection: https://cloud.langfuse.com/generated/postman/collection.json
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Project {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "name")]
    pub name: String,
    /// Metadata for the project
    #[serde(rename = "metadata")]
    pub metadata: std::collections::HashMap<String, serde_json::Value>,
    /// Number of days to retain data. Null or 0 means no retention. Omitted if no retention is configured.
    #[serde(rename = "retentionDays", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub retention_days: Option<Option<i32>>,
}

impl Project {
    pub fn new(id: String, name: String, metadata: std::collections::HashMap<String, serde_json::Value>) -> Project {
        Project {
            id,
            name,
            metadata,
            retention_days: None,
        }
    }
}

