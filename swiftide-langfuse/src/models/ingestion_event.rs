/*
 * langfuse
 *
 * ## Authentication  Authenticate with the API using [Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication), get API keys in the project settings:  - username: Langfuse Public Key - password: Langfuse Secret Key  ## Exports  - OpenAPI spec: https://cloud.langfuse.com/generated/api/openapi.yml - Postman collection: https://cloud.langfuse.com/generated/postman/collection.json
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(untagged)]
pub enum IngestionEvent {
    IngestionEventOneOf(Box<models::IngestionEventOneOf>),
    IngestionEventOneOf1(Box<models::IngestionEventOneOf1>),
    IngestionEventOneOf2(Box<models::IngestionEventOneOf2>),
    IngestionEventOneOf3(Box<models::IngestionEventOneOf3>),
    IngestionEventOneOf4(Box<models::IngestionEventOneOf4>),
    IngestionEventOneOf5(Box<models::IngestionEventOneOf5>),
    IngestionEventOneOf6(Box<models::IngestionEventOneOf6>),
    IngestionEventOneOf7(Box<models::IngestionEventOneOf7>),
    IngestionEventOneOf8(Box<models::IngestionEventOneOf8>),
    IngestionEventOneOf9(Box<models::IngestionEventOneOf9>),
}

impl Default for IngestionEvent {
    fn default() -> Self {
        Self::IngestionEventOneOf(Default::default())
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "trace-create")]
    TraceCreate,
    #[serde(rename = "score-create")]
    ScoreCreate,
    #[serde(rename = "span-create")]
    SpanCreate,
    #[serde(rename = "span-update")]
    SpanUpdate,
    #[serde(rename = "generation-create")]
    GenerationCreate,
    #[serde(rename = "generation-update")]
    GenerationUpdate,
    #[serde(rename = "event-create")]
    EventCreate,
    #[serde(rename = "sdk-log")]
    SdkLog,
    #[serde(rename = "observation-create")]
    ObservationCreate,
    #[serde(rename = "observation-update")]
    ObservationUpdate,
}

impl Default for Type {
    fn default() -> Type {
        Self::TraceCreate
    }
}

