/*
 * langfuse
 *
 * ## Authentication  Authenticate with the API using [Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication), get API keys in the project settings:  - username: Langfuse Public Key - password: Langfuse Secret Key  ## Exports  - OpenAPI spec: https://cloud.langfuse.com/generated/api/openapi.yml - Postman collection: https://cloud.langfuse.com/generated/postman/collection.json
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ModelUsageUnit : Unit of usage in Langfuse
/// Unit of usage in Langfuse
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ModelUsageUnit {
    #[serde(rename = "CHARACTERS")]
    Characters,
    #[serde(rename = "TOKENS")]
    Tokens,
    #[serde(rename = "MILLISECONDS")]
    Milliseconds,
    #[serde(rename = "SECONDS")]
    Seconds,
    #[serde(rename = "IMAGES")]
    Images,
    #[serde(rename = "REQUESTS")]
    Requests,

}

impl std::fmt::Display for ModelUsageUnit {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Characters => write!(f, "CHARACTERS"),
            Self::Tokens => write!(f, "TOKENS"),
            Self::Milliseconds => write!(f, "MILLISECONDS"),
            Self::Seconds => write!(f, "SECONDS"),
            Self::Images => write!(f, "IMAGES"),
            Self::Requests => write!(f, "REQUESTS"),
        }
    }
}

impl Default for ModelUsageUnit {
    fn default() -> ModelUsageUnit {
        Self::Characters
    }
}

